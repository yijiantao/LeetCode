{
    "root": {
        "data": {
            "id": "cg1b68pykxs0",
            "created": 1638092062482,
            "text": "第六章、可执行文件的装载与进程",
            "font-weight": "bold",
            "note": "在这一章中，我们探讨了程序运行时如何使用内存空间的问题，即进程虛拟地址空间问题。接着我们围绕程序如何被操作系统装载到内存中进行运行，介绍了覆盖装入和页映射的模式，分析了为什么要以页映射的方式将程序映射至进程地址空间，这样做的好处是什么，并从操作系统的角度观察进程如何被建立，当程序开始运行时发生页错误该如何处理等。\n我们还详细介绍了进程虚拟地址空间的分布，操作系统如何为程序的代码、数据、堆、栈在进程地址空间中分配，它们是如何分布的。最后两个章节我们分别深入介绍了 Linux和Windows 程序如何装载并且运行 ELF和PE程序。在这一章中，我们假设程序都是静态链接的，那么它们都只有一个单独的可执行文件模块。下一章中我们将介绍一种与静态链按程序不同的概念，即一个单一的可执行文件模块被拆分成若干个模块，在程序运行时进行链接的一种方式。\n"
        },
        "children": [
            {
                "data": {
                    "id": "cg1b8ca4smw0",
                    "created": 1638092226961,
                    "text": "6.1、进程虚拟地址空间"
                },
                "children": [
                    {
                        "data": {
                            "id": "cg2d0bk8il40",
                            "created": 1638198800658,
                            "text": "PAE"
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cg1b8if19jc0",
                    "created": 1638092240318,
                    "text": "6.2、装载的方式"
                },
                "children": [
                    {
                        "data": {
                            "id": "cg2d0gy3weg0",
                            "created": 1638198812381,
                            "text": "6.2.1、覆盖装入"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cg2d0mievcw0",
                            "created": 1638198824492,
                            "text": "6.2.2、页映射"
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cg1b8mxmcw80",
                    "created": 1638092250149,
                    "text": "6.3、从操作系统角度看可执行文件的装载"
                },
                "children": [
                    {
                        "data": {
                            "id": "cg2d10awoyo0",
                            "created": 1638198854514,
                            "text": "6.3.1、进程的建立"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cg37v56rqqo0",
                                    "created": 1638285849369,
                                    "text": "step_1、创建虚拟地址空间；"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cg37vfyk1kw0",
                                    "created": 1638285872817,
                                    "text": "step_2、读取可执行文件头，并且建立虚拟空间与可执行文件的映射关系；（传统意义上“装载”的过程）",
                                    "note": "映射关系只是保存在OS内部的一个数据结构；\nLinux中将进程虚拟空间中的一个段叫做虚拟内存区域（VMA，Virtual Memory Area）"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cg37w6gugrk0",
                                    "created": 1638285930520,
                                    "text": "step_3、将CPU指令寄存器设置成可执行文件入口，启动运行。",
                                    "note": "涉及到内核堆栈和用户堆栈的切换、CPU运行权限的切换；\n从进程角度看这一步可以简单的认为OS执行了一条跳转指令，直接跳转到了可执行文件的入口地址，即ELF文件头中保存的入口地址；"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cg2d1531i4o0",
                            "created": 1638198864922,
                            "text": "6.3.2、页错误"
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cg1b8vk5vs00",
                    "created": 1638092268926,
                    "text": "6.4、进程虚存空间分布"
                },
                "children": [
                    {
                        "data": {
                            "id": "cg3824zpcuo0",
                            "created": 1638286397491,
                            "text": "6.4.1、ELF文件链接视图和执行视图"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cg4381qnkmo0",
                            "created": 1638374315006,
                            "text": "6.4.2、堆和栈"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cg438pywzko0",
                            "created": 1638374367748,
                            "text": "6.4.3、堆的最大申请数量"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cg438wm6vs00",
                            "created": 1638374382216,
                            "text": "6.4.4、段地址对齐"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cg4391qtjug0",
                            "created": 1638374393380,
                            "text": "6.4.5、进程栈初始化"
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cg1b93tk7tc0",
                    "created": 1638092286909,
                    "text": "6.5、Linux内核装载ELF过程简介"
                },
                "children": []
            },
            {
                "data": {
                    "id": "cg1b9fz8qqo0",
                    "created": 1638092313374,
                    "text": "6.6、Windows PE的装载"
                },
                "children": []
            }
        ]
    },
    "template": "right",
    "theme": "fresh-blue",
    "version": "1.4.43"
}